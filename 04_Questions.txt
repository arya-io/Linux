QUESTIONS
`````````````````````````````````````````````````````````````````````````````````````````````````````````````````

1. How do you print the lines between 5 and 10, both inclusive

Answer: # head -10 filename | tail -6



2. Create a new file “new.txt” that is a concatenation of “file1.txt” and “file2.txt”

Answer:  cat file1.txt file2.txt > new.txt


3. What is the output of the following code:

os=Unix
echo 1.$os 2."$os" 3.'$os' 4.$os

Answer: 1.Unix 2.Unix 3.$os 4.Unix


4. To feed standard output of one command to standard input of another in a single shell session. example?

Answer: |


5.  Output of this command: 
cat < file1 >> file2 | file3

Answer: Syntax error

`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````

Questions

Q. Create a collaborative directory /common/adm with the following characteristics:

-Group ownership of /common/adm is admin

-The directory should be readable, writable, and accessible to members of admin, but not to any other user. (It is understood that root has access to all ﬁles and directories on the system.)

# mkdir -p /common/adm
# chgrp admin /common/adm
# chmod 770 /common/adm


Q. Copy the ﬁle /etc/fstab to /var/tmp. Conﬁgure the permissions of /var/tmp/fstab so that: 

-The ﬁle /var/tmp/fstab is owned by the root user.
-The ﬁle /var/tmp/fstab belongs to the group root.
-The ﬁle /var/tmp/fstab should not be executable by anyone.
-The user harry is able to read and write /var/tmp/fstab.
-The user natasha can neither write nor read /var/tmp/fstab.
-all other users (current or future) have the ability to read /var/tmp/fstab 

# cp -rfv /etc/fstab /var/tmp/
# chown root /var/tmp/fstab
# chgrp root /var/tmp/fstab
# setfacl -m u:harry:6 /var/tmp/fstab
# setfacl -m u:natasha:0 /var/tmp/fstab
# chmod o=r /var/tmp/fstab


Q. Create a Command Shell Environment : 
-Create a command qstat.

-It should able to execute the following command 
( ps -eo pid,tid,class,rtprio,ni,pri,psr,pcpu,stat,wchan:14,comm )

# alias qstat='ps -eo pid,tid,class,rtprio,ni,pri,psr,pcpu,stat,wchan:14,comm'
# qstat

```````````````````````````````````````````````````````````````````````````````````

1. Create the following users, groups, and group memberships:

-A group named admin
# groupadd admin

-A user harry who belongs to admin as a secondary group
# useradd -G admin harry

-A user natasha who also belongs to admin as a secondary group
# useradd -G admin natasha

-A user sarah who does not have access to an interactive shell on the system, and who is not a member of admin
# useradd -s /bin/nologin sarah

-harry, natasha, and sarah should all have the password of "redhat@123?"
# passwd user



Q. You need to change the permissions of a file named schedule.txt such that the file owner can edit the file, users who are members of the group that owns the file can edit it, and users who are not owners and don't belong to the owning group can view it but not modify it. Which command will do this?

224



Q. Your Linux system's umask variable is currently set to a value of 077. A user named 'jason' (who is a member of the users group) creates a dir named /tasks. What can users who are members of the users group do with this file?



777 - 077 = 700

`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````



Assignment 2
`````````````
Q. Write a menu based script which displays the following options :

1. Make a file. 
2. Display contents
3. Copy the file
4. Rename the file
5. Delete the file
6. Exit
Enter your option:

If the user selects option 1, accept a file name from the user. If the file exists, 
then display an error message pass the control to the menu. If the file does not exist, 
then allow the user to enter some data. Pressing would save the contents and display the menu.

If the user selects option 2, then accept a file name fromthe user. If the file exists, 
then display the contents of the file. If the file does not exist, then display suitable error message. 
After this process, display the menu to accept another option. 

Selecting Option 3 allows the user to accept 
the source file and target file. If the source file exists and is readable, then accept the target file name. 
If the sourcefile does not exist, then display suitable error message. If the target file does not exist, 
then copy the contents of the source file to the target file. If the target file exists, then display suitable 
message and go back to the menu. 

Option 4 is similar to option 3 but rename the file instead of copying. 

Selecting option 5 allows the user to enter a file name. If the file exists, then check to see if it is writable.
If so, then delete the file with confirmation from the user. If the file does not exist, then display suitable error message.

#!/bin/bash

while true
do

        echo "Welcome to Menu"
        echo "------------------------"
        echo "1. Make a file"
        echo "2. Display contents"
        echo "3. Copy the file"
        echo "4. Rename the file"
        echo "5. Delete the file"
        echo "6. Exit"

        read -p "Enter your option: " option

	case $option in
		"1")

        		read -p "Enter file name: " file_name
        		if [[ -e "$file_name" ]];then
                		echo "Error: File already exists!"
        		else
                		echo "Enter some content. Please press Ctrl + D in order to save the file. "
                		cat > "${file_name}"
                		echo "${file_name} created successfully..!!"
        		fi
			;;
		"2")
			 
        		read -p "Enter file name: " file_name2
			if [[ -e "$file_name2" ]];then
                		echo "File exists!"
				cat "${file_name2}"
			else
				echo "Error: File does not exist."
			fi
			;;
		"3")
			read -p "Enter source file name: " srcfile
			if [[ -e "$srcfile" ]] && [[ -r "$srcfile" ]];then
				read -p "Enter target file name: " trgfile
			
				else
			echo "Error: Source file does not exist."
			fi
			
		if [[ ! -e "$trfgile" ]];then
		cp "$srcfile" "$trgfile"
		echo "Source file is copied to target file."
		else
		echo "Target file exist."
		fi
		;;

	"4")

			
			read -p "Enter source file name: " srcfile
			if [[ -e "$srcfile" ]] && [[ -r "$srcfile" ]];then
				read -p "Enter target file name: " trgfile
			
				else
			echo "Error: Source file does not exist."
			fi
			
		if [[ ! -e "$trfgile" ]];then
		mv "$srcfile" "$trgfile"
		echo "Source file is renamed with the name of target file."
		else
		echo "Target file exist."
		fi
		;;
	"5")
		read -p "Enter a file name: " file5
		if [[ -e "$file5" ]];then
			echo "File exists."
			if [[ -w "$file5" ]];then
				read -p "Do you want to delete the file? If so, press 9: " delt
				if [[ $delt == "9" ]];then
					rm "$file5"
					echo "File deleted successfully..!!"
				fi
			fi
		else
			echo "Error: File does not exist."
		fi
		;;
	"6")
		exit
		;;

	esac
done
 
