Linux Notes

Basic Commands:
----------------
PATH:
`````
+ Absolute [ /home/natasha/Desktop ] 
+ Relative [ Desktop ]

pwd	[print working dir]
cd 	[ Change Dir ]

	# cd path
	# cd .. [eg: cd ../../]

ls	[ List of dir contents ]
	# pwd
	/
	# ls /root/Desktop
mkdir dirname 	[Make Dir]
touch filename 	[To create a blank file]
cat > filename	[To create a new file with text]
	e.g: # cat > marvels
		TEXT
		[ctrl+d]-> save & exit

> [Standard output to the program]
< [Standard input to the program]

cat filename	[ To show the text of file]
cat >> file	[ Append the text in existing file.]
		e.g: # cat >> marvels
		TEXT2
		[ctrl+d]-> exit

date
clear [To clear the screen/terminal] OR ctrl+l
COPY:
-----
a) File to File:
----------------
	# cp srcFilename dstFilename
	OR
	# cp -fv srcFilename dstFilename
	[-f : Forcefully ]
	[-v : Verbose]View the process in detail.

b) File/Dir to Dir
------------------
	# cp -rfv srcFile/Dir dstDir 
[ -r : Recursive ]*
-f : forcefully
-v : verbose

man cmd	[ Manual of command 
	e.g: # man mkdir
REMOVE:
-------
a) A file:
----------
	# rm filename
	# rm -fv  filename
b) A dir:
---------
	# rm -rfv dirname

MOVE: [cut n paste ]
-----
# mv src dst

# mv oldname newname

# mkdir .dirname [Hidden Content]
# ls -a [ Show all content with hidden data]

whoami 

echo "msg" : Print the msg on terminal

# tty
/dev/pts/0

echo "LOL" > /dev/pts/1
echo "Darlings" > kiki
echo "Darlingssssss" >> kiki


alias: [ command redirection ]
------
check current alias:

# alias

Create :

# alias money='whoami'

Remove:

# unalias money
==================
Variables:

- User defined var
- System Defined var


a=8

echo "$a"


env variable:
-------------
# env

# echo $HISTTIMEFORMAT

%d [Day]
%m [Month]
%y [Year]
%T [Time]

# export HISTTIMEFORMAT="%d-%m-%y %T "

------
# history

¬¬¬¬

Find Data:
```````````
Syntax:
```````
# find <where_to_find> -<attrib> <what_to_find>

1) NAME
`````````
# find . -name natasha
# find . -iname natasha
# find /home/edbda/ -iname "*.png"

2) SIZE:
````````
k : KB
G : GB
M : MB

# find /home/edbda -size 2k
# find /home/edbda -size +2k
# find /home/edbda -size -2k
# find /home/edbda -size +2M -size -10M

3) TYPE:
````````
# find /home/edbda -type f
# find /home/edbda -type d
# find /home/edbda -type f -iname "abc" 

4) INDEX NUMBER:
`````````````````
# find /home/edbda -inum 45645456456

| (pipe sign)
`````````````````

# cmd1 | cmd2
--o/p---->i/p

# cat filename
# wc -l filename

# cat data | wc -l
grep : 
```````
To search string/pattern/regex 

Syntax:
```````
# grep "string" filename
# grep "string1\|string2" filename

inverse grep:
````````````
# grep -v "string1" filename

# grep -i "s" data

Metachar
````````
^ : Start of line
$ : End of line

# grep -i "^s" data
# grep -i "s$" data

Only Match
```````````
# grep -o "string" filename

Before & After match
``````````````````````
# grep -B 1 "^i" data
# grep -A 1 "^i" data
# grep -A 1 -B 1 "^i" data

Pattern/Regex:
``````````````
[] : char class

[a-z]
[A-Z]
[0-9]
[a-zA-Z0-9]

Extended grep
# grep -E 
OR
# egrep 

[] : char class
{} : range
[a-z]{10}
[a-z]{10,20}
[a-z]{10,}


QUESTIONS

1. How do you print the lines between 5 and 10, both inclusive

Answer: # head -10 filename | tail -6



2. Create a new file “new.txt” that is a concatenation of “file1.txt” and “file2.txt”

# cat file1.txt file2.txt > new.txt



3. What is the output of the following code:

os=Unix
echo 1.$os 2."$os" 3.'$os' 4.$os



4. To feed standard output of one command to standard input of another in a single shell session. example?

|


5.  Output of this command: 
cat < file1 >> file2 | file3

Syntax error




VIM EDITOR:


update:
`````````
# apt update 

Upgrade:
````````
# apt upgrade

Install:
```````````
# apt install package_name

Uninstall:
``````````
# apt autoremove package_name

\

Command line mode commands:
````````````````````````````
i : Take you to insert mode
Esc : Go back to command line mode
G : Take you to end of file.
yy : yanked (copy) the current line and press p for paste below OR P for paste above
nyy : yanked ( copy) n number of lines
p : paste
dd : cut the current line
ndd : cut n number of lines
u : undo
ctrl + r : redu

Last line actions:
```````````````````
:set nu : show line numbers
:set nonu : remove line numbers
:line_number : take you to specific line
/word : search a word,to go to next occurrence press n
To go to previous occurrence press N
:%s/old_word/new_word : search and replace
:%s/old_word/new_word/g : search and replace
:wq save and quit
:w save
:q quit
:w! save forcefully
:q! quit forcefully
:wq! Save and quit forcefully
